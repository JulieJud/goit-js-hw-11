{"version":3,"sources":["js/task-1.js","js/task-2.js","js/task-3.js","index.js"],"names":["startBtn","document","querySelector","stopBtn","addEventListener","clickOnStart","clickOnStop","PROMT_DELAY","timeOutId","isActive","intervalId","setInterval","body","style","backgroundColor","getRandomHexColor","Math","floor","random","toString","clearInterval","convertMs","ms","days","hour","hours","minute","minutes","second","seconds","console","log","delay","Promise","resolve","logger","time","then","users","name","active","toggleUserState","allUsers","username","map","user","table","randomIntegerFromInterval","min","max","makeTransaction","transaction","reject","setTimeout","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAAA,MAAMA,EAAWC,SAASC,cAAc,gBAClCC,EAAUF,SAASC,cAAc,eAGvCF,EAASI,iBAAiB,QAASC,GACnCF,EAAQC,iBAAiB,QAASE,GAElC,MAAMC,EAAc,IACpB,IAAIC,EAAY,KACZC,GAAW,EAEf,SAASJ,IACDI,IAGJA,GAAW,EACXC,WAAaC,YAAY,KACrBV,SAASW,KAAKC,MAAMC,gBAAkBC,KACvCR,IAKP,SAASQ,IACG,UAAGC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,MAI7D,SAASb,IACLc,cAAcV,YACdD,GAAW;;AC9Bf,SAASY,EAAUC,GAgBR,MAAA,CAAEC,KARIP,KAAKC,MAAMK,EAHZE,OAWGC,MANDT,KAAKC,MAAOK,EALdE,MADCE,MAYSC,QAJNX,KAAKC,MAAQK,EAPjBE,MADCE,KADEE,KAagBC,QAFfb,KAAKC,MAASK,EATlBE,MADCE,KADEE,IADA,MAiBnBE,QAAQC,IAAIV,EAAU,MACtBS,QAAQC,IAAIV,EAAU,OACtBS,QAAQC,IAAIV,EAAU;;ACjBtB,MAAMW,EAAQV,GACHW,QAAQC,QAAQZ,GAIrBa,EAASC,GAAQN,QAAQC,uBAAuBK,OAGtDJ,EAAM,KAAMK,KAAKF,GACjBH,EAAM,KAAMK,KAAKF,GACjBH,EAAM,MAAMK,KAAKF,GAKjB,MAAMG,EAAQ,CACV,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,IAGtBC,EAAkB,CAACC,EAAUC,IAExB,IAAIV,QAASC,IAIpBA,EAHqBQ,EAASE,IAAIC,GAChCA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,MAYnEJ,EAAgBH,EAAO,SAASD,KAAKP,QAAQgB,OAC7CL,EAAgBH,EAAO,QAAQD,KAAKP,QAAQgB,OAO5C,MAAMC,EAA4B,CAACC,EAAKC,IAC/BjC,KAAKC,MAAMD,KAAKE,UAAY+B,EAAMD,EAAM,GAAKA,GAG9CE,EAAkBC,GACjB,IAAIlB,QAAS,CAACC,EAAQkB,KACrBpB,MAAAA,EAAQe,EAA0B,IAAK,KAE7CM,WAAW,KACUrC,KAAKE,SAAW,IAGjCgB,EAAQ,CAAEoB,GAAIH,EAAYG,GAAIlB,KAAMJ,IAEpCoB,EAAOD,EAAYG,KACpBtB,KAGDuB,EAAa,EAAGD,GAAAA,EAAIlB,KAAAA,MACxBN,QAAQC,mBAAmBuB,kBAAmBlB,QAG1CoB,EAAWF,IACfxB,QAAQ2B,qCAAqCH,+BAQ/CJ,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAAOrB,KAAKkB,GAAYI,MAAMH,GAChEN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAAOrB,KAAKkB,GAAYI,MAAMH;;AC7EhE,aAJA,QAAA,oBAEA,QAAA,eACA,QAAA,eACA,QAAA","file":"src.9c41f648.js","sourceRoot":"../src","sourcesContent":["const startBtn = document.querySelector('[data-start]');\nconst stopBtn = document.querySelector('[data-stop]');\n\n\nstartBtn.addEventListener('click', clickOnStart);\nstopBtn.addEventListener('click', clickOnStop);\n\nconst PROMT_DELAY = 1000\nlet timeOutId = null\nlet isActive = false;\n\nfunction clickOnStart() {\n    if (isActive) {\n        return;\n    }\n    isActive = true;\n    intervalId = setInterval(() => {\n        document.body.style.backgroundColor = getRandomHexColor();\n    }, PROMT_DELAY);\n};\n\n\n\nfunction getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\n\nfunction clickOnStop() {\n    clearInterval(intervalId);\n    isActive = false;\n}\n\n","function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); //{days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6, minutes: 42, seconds: 20}","\n// sub-task 1\n\n\nconst delay = ms => {\n    return Promise.resolve(ms);\n    // Change this function\n};\n\nconst logger = time => console.log(`Fulfilled after ${time}ms`);\n\n// Tests\ndelay(2000).then(logger); // Fulfilled after 2000ms\ndelay(1000).then(logger); // Fulfilled after 1000ms\ndelay(1500).then(logger); // Fulfilled after 1500ms\n\n\n// sub-task 2\n\nconst users = [\n    { name: 'Mango', active: true },\n    { name: 'Poly', active: false },\n    { name: 'Ajax', active: false },\n];\n\nconst toggleUserState = (allUsers, username,) => {\n\n    return new Promise (resolve => {\n    const updatedUsers = allUsers.map(user =>\n      user.name === username ? { ...user, active: !user.active } : user\n    )\n    resolve (updatedUsers);\n  })\n};\n    \n\n// Currently the function works like this\n//toggleUserState(users, 'Mango', console.table);\n//toggleUserState(users, 'Ajax', console.table);\n\n// The function should work like this\ntoggleUserState(users, 'Mango').then(console.table);\ntoggleUserState(users, 'Ajax').then(console.table);\n\n\n\n// sub-task 3\n\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n  const makeTransaction = transaction => { \n  return new Promise ((resolve,reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n  \n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      } \n        reject(transaction.id);\n    }, delay);\n  })};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n// Currently the function works like this\n//makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n//makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n\n// The function should work like this\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);","import './sass/main.scss';\n\nimport './js/task-1'\nimport './js/task-2'\nimport './js/task-3'"]}